[environment]
#prefix = /vol/robocup/2013/
#release_prefix = /
#PKG_CONFIG_PATH = /usr/lib/pkgconfig
#DISPLAY=:100
ROS_PORT=31232
DATA_CENTRE_PORT=52345
#ROSPKG=
#ROSLAUNCH=

# datacentre needs the variable HOSTNAME to be set, we use localhost here
HOSTNAME=localhost
DATA_CENTRE_PATH=$WORKSPACE/var/ros_datacentre
ROS_MASTER_URI=http://localhost:31232

[component-init]
name = init
command = bash -c ' if mkdir -p $DATA_CENTRE_PATH; then echo init completed; fi'
path = /bin/
execution_host = localhost
check_execution = False
check_type = stdout
timeout = 5
blocking = True
ongoing = False
criteria = init completed

[component-insert-wp]
name = insert-wp
command = rosrun waypoint_recorder insert_in_db.py test.csv fsmpatrol testmap
path = /opt/ros/groovy/bin/
execution_host = localhost
check_execution = False
check_type = stdout
timeout = 5
blocking = True
ongoing = False
criteria = Using datacentre


[component-datacentre]
name = datacentre
command = roslaunch ros_datacentre datacentre.launch db_path:=$DATA_CENTRE_PATH port:=$DATA_CENTRE_PORT
path = /opt/ros/groovy/bin/
execution_host = localhost
check_execution = True
check_type = pid,stdout
timeout = 10,20
blocking = True,True
ongoing = True,False
criteria = ,waiting for connections

[component-roscore]
name = roscore
command = roscore -p $ROS_PORT
path = /opt/ros/groovy/bin/
execution_host = localhost
check_execution = True
check_type = pid,stdout
timeout = 10,30
blocking = True,True
ongoing = True,False
criteria = ,started core service


[component-morse]
name = morse
command = vglrun /opt/ros/groovy/bin/roslaunch strands_morse uol_mht_morse.launch
path = /usr/bin/
execution_host = localhost
check_execution = True
check_type = pid,stdout
timeout = 10,30
blocking = True,True
ongoing = True,False
criteria = ,SCENE

[component-roslaunch]
name = roslaunch
command = roslaunch $ROSPKG $ROSLAUNCH
path = /opt/ros/groovy/bin/
execution_host = localhost
check_execution = True
check_type = pid
timeout = 10
blocking = True
ongoing = True
criteria = 


[component-patroller]
name = patroller
command = roslaunch waypoint_patroller patroller.launch waypoints:=$WORKSPACE/fsm_testing/test.csv
path = /opt/ros/groovy/bin/
execution_host = localhost
check_execution = True
check_type = pid,stdout
timeout = 10,30
blocking = True,True
ongoing = True,False
criteria = ,Creating base movement client

[component-rosbag]
name = topic-logger
command = rosbag record -a -o $FSMDAT/$FSMTRA.bag  
path = /opt/ros/groovy/bin/
execution_host = localhost
check_execution = True
check_type = pid
timeout = 5
blocking = True
ongoing = True
criteria = 


[component-mongodump]
name = mongodump
command = mongodump -o $FSMDAT/mondodump --dbpath $DATA_CENTRE_PATH
path = /usr/bin/
execution_host = localhost
check_execution = True
check_type = pid
timeout = 5
blocking = True
ongoing = False
criteria = 

[component-ffmpeg]
name = ffmpeg
command = avconv -f x11grab -r 5 -s 1280x1024 -i $DISPLAY+nomouse $FSMVID/screen.mp4
path = /usr/bin/
execution_host = localhost
check_execution = True
check_type = pid,stdout
timeout = 10,30
blocking = True,True
ongoing = True,False
criteria = ,Press ctrl-c to stop encoding



[run]
name = morse_startup
namespace = http://my_namespace.com
run_order = ('roscore','init','morse','ffmpeg','datacentre','insert-wp','roslaunch'),
#run_order = ('morse',),
run_execution_duration = 60
result_assessment_order = ('mongodump',),
result_assessment_execution_duration = 5
